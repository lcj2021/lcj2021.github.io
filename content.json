{"meta":{"title":"Liucj's Harbour","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[{"title":"关于博主","date":"2022-10-31T16:28:05.000Z","updated":"2022-10-31T16:40:47.327Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"刘城君，男，汉族，2001年5月出生，共青团员，湖南大学计算机科学与技术专业2019级学生。研究兴趣为图计算、图挖掘、图嵌入学习。国内首例rCPD治愈患者 [^1]。 R-CPD 逆行性环咽肌功能障碍[^2]这是一种由于环咽肌功能失调，不能自下而上的通过食管入口把气体排出来的罕见疾病，主要临床表现为不能打嗝。 本人为国内首例rCPD治愈患者，希望能帮助到rCPD病友，可以查看本人求医治愈经历，联系本人微信13352891273 Awards Entry Time Organizer Silver Award(Rank 12) CCSP[^3] Central China Oct,2021 China Computer Federation Third Prize of 湖南省大学生数学竞赛 Oct,2021 Third Prize of 全国大学生数学建模大赛湖南赛区 Sep,2021 University Merit Student of HNU December,2020 Hunan University Second Prize(Rank 44) of HNU Mathematic Competition May,2020 Hunan University First &amp; Second Prize Scholarships Hunan University For more infoMore info about me can be found in CV and CV-zh [^1]: 2021年4月30日中午1时，中山大学附属第三医院窦祖林教授 主刀[^2]: 首次被Robert Bastian定义于Inability to Belch and Associated Symptoms Due to Retrograde Cricopharyngeus Dysfunction: Diagnosis and Treatment[^3]: The CCF College Computer Systems &amp; Programming Contest"}],"posts":[{"title":"题解 - 牛客小白月赛59DEF","slug":"题解 - 牛客小白月赛59DEF","date":"2022-10-31T16:00:00.000Z","updated":"2022-11-01T16:30:55.170Z","comments":true,"path":"2022/11/01/题解 - 牛客小白月赛59DEF/","link":"","permalink":"http://example.com/2022/11/01/%E9%A2%98%E8%A7%A3%20-%20%E7%89%9B%E5%AE%A2%E5%B0%8F%E7%99%BD%E6%9C%88%E8%B5%9B59DEF/","excerpt":"","text":"D - 国际象棋题意n x m (1000) 的竖着放的棋盘, 每次在某一列从上往下丢1个黑白棋子, 黑白间隔着丢, 共丢t (1e6) 个. 问何时出现k连相同颜色的棋子(连棋子规则同五子棋) 分析每次加入棋子, 就判断这个位置上”-“, “|”, “/“. “\\“四个方向上已经连了几个了. 注意不能分8个方向 代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748const int N = 1e3 + 10;int n, m, k, t;int h[N], g[N][N];int dx[] = &#123;1, -1, 1, -1, 0, 0, -1, 1&#125;, dy[] = &#123;0, 0, 1, -1, 1, -1, 1, -1&#125;;int solve()&#123; cin &gt;&gt; n &gt;&gt; m &gt;&gt; k &gt;&gt; t; memset(g, -1, sizeof g); for (int tt = 1; tt &lt;= t; ++ tt) &#123; int col, x = tt % 2; cin &gt;&gt; col; g[++ h[col]][col] = x; int cx = h[col], cy = col;// cerr &lt;&lt; tt &lt;&lt; &#x27; &#x27; &lt;&lt; cx &lt;&lt; &#x27; &#x27; &lt;&lt; cy &lt;&lt; endl;// for (int i = n; i &gt;= 1; -- i) for (int j = 1; j &lt;= m; ++ j) cerr &lt;&lt; g[i][j] &lt;&lt; &quot; \\n&quot;[j == m]; int cnt = 1; while (cx + 1 &lt;= n &amp;&amp; g[cx + 1][cy] == x) ++ cx, ++ cnt; cx = h[col], cy = col; while (cx - 1 &gt;= 1 &amp;&amp; g[cx - 1][cy] == x) -- cx, ++ cnt; if (cnt &gt;= k) return tt;// cerr &lt;&lt; &quot; - &quot; &lt;&lt; cnt &lt;&lt; endl; cx = h[col], cy = col; cnt = 1; while (cy + 1 &lt;= m &amp;&amp; g[cx][cy + 1] == x) ++ cy, ++ cnt; cx = h[col], cy = col; while (cy - 1 &gt;= 1 &amp;&amp; g[cx][cy - 1] == x) -- cy, ++ cnt; if (cnt &gt;= k) return tt;// cerr &lt;&lt; &quot; | &quot; &lt;&lt; cnt &lt;&lt; endl; cx = h[col], cy = col; cnt = 1; while (cx + 1 &lt;= n &amp;&amp; cy + 1 &lt;= m &amp;&amp; g[cx + 1][cy + 1] == x) ++ cx, ++ cy, ++ cnt; cx = h[col], cy = col; while (cx - 1 &gt;= 1 &amp;&amp; cy - 1 &gt;= 1 &amp;&amp; g[cx - 1][cy - 1] == x) -- cx, -- cy, ++ cnt; if (cnt &gt;= k) return tt;// cerr &lt;&lt; &quot; / &quot; &lt;&lt; cnt &lt;&lt; endl; cx = h[col], cy = col; cnt = 1; while (cx + 1 &lt;= n &amp;&amp; cy - 1 &gt;= 1 &amp;&amp; g[cx + 1][cy - 1] == x) ++ cx, -- cy, ++ cnt; cx = h[col], cy = col; while (cx - 1 &gt;= 1 &amp;&amp; cy + 1 &gt;= 1 &amp;&amp; g[cx - 1][cy + 1] == x) -- cx, ++ cy, ++ cnt; if (cnt &gt;= k) return tt;// cerr &lt;&lt; &quot; \\\\ &quot; &lt;&lt; cnt &lt;&lt; endl; &#125; return t;&#125; E - 弹珠碰撞题意长度为 n 的线段上，有 m 颗弹珠在匀速以1单位/s 左右滚动。弹珠ball有d, p两个参数. d(0/1)表示左/右方向, p表示初始位置. 两颗滚动方向相反的弹珠位置重合的时候就会停滞 1 单位时间不滚动，并交换两颗弹珠滚动的方向。一颗弹珠可以反复发生碰撞，如果在停滞中受到碰撞，则停滞时间会累加。 如果一颗弹珠滚到了位置 0 或位置 n+1，那么这颗弹珠就滚出了线段。问最后一颗弹珠在什么时候滚出线段？ 分析a -&gt; &lt;- b 左右两个弹珠相撞后 &lt;-a b -&gt; &lt;-b a -&gt; 其实也能等价于a, b两个球直接穿过彼此. 有一道gym上的题, 学弟LLQ就想出来了这个性质, 挺经典的 算时间的时候, 只用看珠子在前进到终点的过程中, 迎面而来有多少个珠子, 用前后缀统计下就行. ​ 代码123456789101112131415161718192021222324252627const int N = 1e6 + 10;int n, m;struct &#123; int d, p;&#125; ball[N];int pre1[N]; // -&gt;int suf0[N]; // &lt;-void solve()&#123; cin &gt;&gt; n &gt;&gt; m; for (int i = 1; i &lt;= m; ++ i) cin &gt;&gt; ball[i].d; for (int i = 1; i &lt;= m; ++ i) cin &gt;&gt; ball[i].p; sort(ball + 1, ball + 1 + m, [&amp;](auto &amp;a, auto &amp;b) &#123; return a.p &lt; b.p; &#125;); for (int i = 1; i &lt;= m; ++ i) pre1[i] = pre1[i - 1] + (ball[i].d == 1); for (int i = m; i &gt;= 1; -- i) suf0[i] = suf0[i + 1] + (ball[i].d == 0); int ans = 0; for (int i = 1; i &lt;= m; ++ i) &#123; auto [d, p] = ball[i]; int t = (d ? (n + 1 - p) + suf0[i] : p + pre1[i]); // cerr &lt;&lt; t &lt;&lt; endl; ans = max(t, ans); &#125; cerr &lt;&lt; ans &lt;&lt; endl; cout &lt;&lt; ans &lt;&lt; endl;&#125; F - 困难卷积题意给定整数序列 a[n], b[n]，求：$$\\sum_{i=1}^n\\sum_{j=1}^n\\Big\\lfloor\\sqrt{|a_i-b_j|}\\Big\\rfloor$$ 其中 $\\lfloor x\\rfloor$表示不超过 x 的最大整数，例如 $\\lfloor 3.5\\rfloor=3,\\lfloor\\sqrt 2\\rfloor =1$。 $1≤n≤10^6，0\\leq a_i,b_i\\leq 3\\times 10^6，\\sum a_i,\\sum b_i\\leq 10^7$。 分析3e6 排除暴力. 注意到$\\sum_{a_i}$才10倍于len(a), 说明有很多数都是重复的. 所以分组计算就行 代码1234567891011121314151617const int N = 1e6 + 10;int a[N], b[N];int n;void solve()&#123; cin &gt;&gt; n; map&lt;int, int&gt; cnta, cntb; for (int i = 1; i &lt;= n; ++ i) cin &gt;&gt; a[i], cnta[a[i]] ++; for (int i = 1; i &lt;= n; ++ i) cin &gt;&gt; b[i], cntb[b[i]] ++; int ans = 0; for (auto [va, ca] : cnta) for (auto [vb, cb] : cntb) &#123; ans += floor(sqrt(abs(va - vb))) * ca * cb; &#125; cerr &lt;&lt; ans &lt;&lt; endl; cout &lt;&lt; ans &lt;&lt; endl;&#125;","categories":[{"name":"题解","slug":"题解","permalink":"http://example.com/categories/%E9%A2%98%E8%A7%A3/"}],"tags":[{"name":"思维","slug":"思维","permalink":"http://example.com/tags/%E6%80%9D%E7%BB%B4/"}]},{"title":"Hello World","slug":"hello-world","date":"2022-10-31T11:31:34.473Z","updated":"2022-10-31T11:29:53.845Z","comments":true,"path":"2022/10/31/hello-world/","link":"","permalink":"http://example.com/2022/10/31/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"Ubuntu 下使用 Clash 代理","slug":"Ubuntu 下使用 Clash 代理","date":"2022-02-01T16:00:00.000Z","updated":"2022-10-31T16:21:23.581Z","comments":true,"path":"2022/02/02/Ubuntu 下使用 Clash 代理/","link":"","permalink":"http://example.com/2022/02/02/Ubuntu%20%E4%B8%8B%E4%BD%BF%E7%94%A8%20Clash%20%E4%BB%A3%E7%90%86/","excerpt":"","text":"Ubuntu科学上网 在 https://github.com/Dreamacro/clash/releases 下载对应的 clash 版本（普通电脑对应的是 linux-amd64 版本），解压，重命名为 clash。 添加执行权限（sudo chmod + x clash），将 clash 放到 /usr/bin/ 目录下（sudo cp clash /usr/bin/）。 在终端中运行 clash，会在 ~/.config/clash 文件夹下生成 config.yaml 和 Country.mmdb 两个文件。用商家提供的替换这两个文件，重新运行 clash。 设置系统代理： 用 nohup clash &amp; 命令可以使程序在后台运行，即使退出终端也不影响。 将clash进程加入开机自启动","categories":[{"name":"Linux","slug":"Linux","permalink":"http://example.com/categories/Linux/"}],"tags":[{"name":"Network","slug":"Network","permalink":"http://example.com/tags/Network/"}]}],"categories":[{"name":"题解","slug":"题解","permalink":"http://example.com/categories/%E9%A2%98%E8%A7%A3/"},{"name":"Linux","slug":"Linux","permalink":"http://example.com/categories/Linux/"}],"tags":[{"name":"思维","slug":"思维","permalink":"http://example.com/tags/%E6%80%9D%E7%BB%B4/"},{"name":"Network","slug":"Network","permalink":"http://example.com/tags/Network/"}]}