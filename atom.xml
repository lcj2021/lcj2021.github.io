<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Liucj&#39;s Harbour</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-11-03T07:32:53.749Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>题解 - AtCoder Beginner Contest 192 D-F</title>
    <link href="http://example.com/2022/11/03/%E9%A2%98%E8%A7%A3%20-%20AtCoder%20Beginner%20Contest%20192%20D-F/"/>
    <id>http://example.com/2022/11/03/%E9%A2%98%E8%A7%A3%20-%20AtCoder%20Beginner%20Contest%20192%20D-F/</id>
    <published>2022-11-02T16:00:00.000Z</published>
    <updated>2022-11-03T07:32:53.749Z</updated>
    
    <content type="html"><![CDATA[<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>给定整数 $ X (1\le X\le 10^{60})$和 $ M (1\le M\le 10^{18})$, 设 $ d $ 是 $ X $ 最大的一位数. </p><p>求对于所有的 $a&gt;d,a \in \mathbb{Z}$, $ a $ 进制数 $ X $ 所代表的数的个数, 同时 $ X _a\le M$. </p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>首先, 对于所有 $len (X) &gt;1$ 的情况, $ a $ 的个数与题意中所求一一对应. 而 $len (x) =1$ 只需特判. </p><p>注意到这样的 $ a $ 一定在一个连续区间内, 左端点固定, 则可以二分右端点求得数量. </p><p>同时, <code>long long</code> 相乘可能会爆, 必须乘乘数<code>base</code>之前判断当前<code>val &gt; target / base </code>. 或者用 <code>__int128</code>AtCoder 支持 或龟速乘. </p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">string x;</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; x &gt;&gt; m;</span><br><span class="line">    <span class="type">signed</span> mx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;ch : x)  mx = <span class="built_in">max</span>(mx, ch - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (x.<span class="built_in">size</span>() == <span class="number">1</span>) &#123;                        <span class="comment">// 特判: 因为题目要求不同的数</span></span><br><span class="line">        <span class="keyword">if</span> (mx &lt;= m)    cout &lt;&lt; <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span>            cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> check = [&amp;](<span class="type">int</span> base) -&gt; <span class="type">bool</span> &#123;</span><br><span class="line">        <span class="type">int</span> val = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; x.<span class="built_in">size</span>(); ++ i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (val &gt; m / base) &#123;               <span class="comment">// 每次 + *base 之前 跟目标 /base 作比较 防止溢出</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> b = x[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            val *= base;</span><br><span class="line">            val += b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (val &lt;= m);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> l = mx, r = <span class="number">1e18</span> + <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">        <span class="type">int</span> mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">check</span>(mid))         l = mid;</span><br><span class="line">        <span class="keyword">else</span>                    r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cerr &lt;&lt; l &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; l - mx &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>$G(N, M), N, M \leq 1e5$ 无向图. 设初始时刻为 $ 0 $, 则进入某条边的时刻必须为 $xK_i, x\in\mathbb{N}$, 可以在节点停留, 消耗时间为 $T_i, K_i,T_i \in [1, 1e9]$. 求 $ X $ 到 $ Y $ 的最短路, 不连通则输出 <code>-1</code>. </p><h2 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h2><p>注意到时间仍然是越短越好, 满足 dijkstra 的基本条件, 直接跑, 改一下松弛时候的边权更新值即可. </p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n, m, x, y;</span><br><span class="line">vector&lt;array&lt;<span class="type">int</span>, 3&gt;&gt; G[N];</span><br><span class="line"><span class="type">int</span> dist[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; x &gt;&gt; y;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i) &#123;</span><br><span class="line">        <span class="type">int</span> a, b, t, k; cin &gt;&gt; a &gt;&gt; b &gt;&gt; t &gt;&gt; k;</span><br><span class="line">        G[a].<span class="built_in">pb</span>(&#123;b, t, k&#125;);</span><br><span class="line">        G[b].<span class="built_in">pb</span>(&#123;a, t, k&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    priority_queue&lt;array&lt;<span class="type">int</span>, 2&gt;, vector&lt;array&lt;<span class="type">int</span>, 2&gt;&gt;, greater&lt;array&lt;<span class="type">int</span>, 2&gt;&gt;&gt; pq;</span><br><span class="line">    <span class="built_in">memset</span>(dist, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> dist);</span><br><span class="line">    dist[x] = <span class="number">0</span>;    pq.<span class="built_in">push</span>(&#123;<span class="number">0</span>, x&#125;);</span><br><span class="line">    <span class="keyword">while</span> (pq.<span class="built_in">size</span>()) &#123;</span><br><span class="line">        <span class="keyword">auto</span> [cd, cv] = pq.<span class="built_in">top</span>();   pq.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span> (cd &gt; dist[cv])  <span class="keyword">continue</span>;</span><br><span class="line">        <span class="comment">// cerr &lt;&lt; cd &lt;&lt; &#x27; &#x27; &lt;&lt; cv &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> [nv, t, k] : G[cv]) &#123;</span><br><span class="line">            <span class="type">int</span> nd = (cd + k - <span class="number">1</span>) / k * k;</span><br><span class="line">            nd = nd + t;</span><br><span class="line">            <span class="comment">// cerr &lt;&lt; nv &lt;&lt; &#x27; &#x27; &lt;&lt; nd &lt;&lt; endl;</span></span><br><span class="line">            <span class="keyword">if</span> (nd &lt; dist[nv]) &#123;</span><br><span class="line">                dist[nv] = nd;</span><br><span class="line">                pq.<span class="built_in">push</span>(&#123;nd, nv&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cerr &lt;&lt; dist[y] &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">if</span> (dist[y] &gt;= <span class="number">0x3f3f3f3f3f3f3f3f</span> / <span class="number">2</span>)  cout &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span>                                    cout &lt;&lt; dist[y] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><h3 id="题意-2"><a href="#题意-2" class="headerlink" title="题意"></a>题意</h3><p>给定数组a[N], $a[i] \leq 1e7$和$X \in [1e9, 1e18]$, 要求选出k个数, 总和记为sum, 设$sum + mn * k = X$, 求出满足的最小整数mn的值. </p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>100个数取数 -&gt; 背包. 但是和背包总和太大, 所以要考虑加入模数</p><p>枚举所有可能选择的物品个数 $ choose $, 分别进行 DP. </p><p><code>dp[k][i][j]</code> = 前k个数, 选了i个数，它们的和必须是%choose=j，满足要求的和的最大值</p><p>不拿第k个物品: <code>dp[k][i][j] = dp[k - 1][i][j];</code></p><p>拿第k个物品: <code>dp[k][i][j] = max(dp[k][i][j], dp[k - 1][i - 1][(j - w[k] + choose) % choose] + a[k]);</code></p><p>总复杂度 $\mathcal{O}(n^4)$. </p><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n, x;</span><br><span class="line"><span class="type">int</span> a[N], w[N];</span><br><span class="line"><span class="type">int</span> dp[N][N][N];        </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)   cin &gt;&gt; a[i];</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ans = <span class="number">1e18</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> choose = <span class="number">1</span>; choose &lt;= n; ++ choose) &#123;</span><br><span class="line">        <span class="type">int</span> m = x % choose;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)   w[i] = a[i] % choose;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">-1</span>, <span class="keyword">sizeof</span> dp);</span><br><span class="line">        <span class="comment">// dp[k][i][j] = 前k个数, 选了i个数，它们的和必须是%choose=j，满足要求的和的最大值</span></span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;       </span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt;= n; ++ k) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="built_in">min</span>(k, choose); ++ i) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; choose; ++ j) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (~dp[k - <span class="number">1</span>][i][j]) &#123;</span><br><span class="line">                        dp[k][i][j] = dp[k - <span class="number">1</span>][i][j];</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (~dp[k - <span class="number">1</span>][i - <span class="number">1</span>][(j - w[k] + choose) % choose]) &#123;</span><br><span class="line">                        dp[k][i][j] = <span class="built_in">max</span>(dp[k][i][j], dp[k - <span class="number">1</span>][i - <span class="number">1</span>][(j - w[k] + choose) % choose] + a[k]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 最终必须选择了choose个, 并且这choose个总和sum, 满足sum % choose == x % choose</span></span><br><span class="line">        <span class="keyword">if</span> (~dp[n][choose][m]) &#123;</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, (x - dp[n][choose][m]) / choose);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cerr &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="评价"><a href="#评价" class="headerlink" title="评价"></a>评价</h2><p>D 考察乘法溢出, 各种边界讨论比较繁琐</p><p>E 最短路变形, 松弛边权做一下变化即可</p><p>F 背包+模数, 在外层套一层for模数<code>choose</code>, 状态表示加一个维度表示当前总和mod <code>choose</code>的值</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;D&quot;&gt;&lt;a href=&quot;#D&quot; class=&quot;headerlink&quot; title=&quot;D&quot;&gt;&lt;/a&gt;D&lt;/h2&gt;&lt;h3 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h3&gt;&lt;p&gt;给定整数 $ </summary>
      
    
    
    
    <category term="题解" scheme="http://example.com/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="算法_二分" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95-%E4%BA%8C%E5%88%86/"/>
    
    <category term="算法_最短路" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95-%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
    <category term="算法_DP_背包" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95-DP-%E8%83%8C%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>题解 - 牛客小白月赛59DEF</title>
    <link href="http://example.com/2022/11/01/%E9%A2%98%E8%A7%A3%20-%20%E7%89%9B%E5%AE%A2%E5%B0%8F%E7%99%BD%E6%9C%88%E8%B5%9B59%20D-F/"/>
    <id>http://example.com/2022/11/01/%E9%A2%98%E8%A7%A3%20-%20%E7%89%9B%E5%AE%A2%E5%B0%8F%E7%99%BD%E6%9C%88%E8%B5%9B59%20D-F/</id>
    <published>2022-10-31T16:00:00.000Z</published>
    <updated>2022-11-03T05:29:36.070Z</updated>
    
    <content type="html"><![CDATA[<h2 id="D-国际象棋"><a href="#D-国际象棋" class="headerlink" title="D - 国际象棋"></a>D - 国际象棋</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>n x m (1000) 的竖着放的棋盘, 每次在某一列从上往下丢1个黑白棋子, 黑白间隔着丢, 共丢t (1e6) 个. 问何时出现k连相同颜色的棋子(连棋子规则同五子棋)</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>每次加入棋子, 就判断这个位置上”-“, “|”, “/“. “\“四个方向上已经连了几个了.</p><p>注意不能分8个方向</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n, m, k, t;</span><br><span class="line"><span class="type">int</span> h[N], g[N][N];</span><br><span class="line"><span class="type">int</span> dx[] = &#123;<span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>&#125;, dy[] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k &gt;&gt; t;</span><br><span class="line">    <span class="built_in">memset</span>(g, <span class="number">-1</span>, <span class="keyword">sizeof</span> g);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> tt = <span class="number">1</span>; tt &lt;= t; ++ tt) &#123;</span><br><span class="line">        <span class="type">int</span> col, x = tt % <span class="number">2</span>;    cin &gt;&gt; col;</span><br><span class="line">        g[++ h[col]][col] = x;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> cx = h[col], cy = col;</span><br><span class="line"><span class="comment">//         cerr &lt;&lt; tt &lt;&lt; &#x27; &#x27; &lt;&lt; cx &lt;&lt; &#x27; &#x27; &lt;&lt; cy &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//         for (int i = n; i &gt;= 1; -- i)   for (int j = 1; j &lt;= m; ++ j)   cerr &lt;&lt; g[i][j] &lt;&lt; &quot; \n&quot;[j == m];</span></span><br><span class="line">        <span class="type">int</span> cnt = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (cx + <span class="number">1</span> &lt;= n &amp;&amp; g[cx + <span class="number">1</span>][cy] == x)   ++ cx, ++ cnt;</span><br><span class="line">        cx = h[col], cy = col;</span><br><span class="line">        <span class="keyword">while</span> (cx - <span class="number">1</span> &gt;= <span class="number">1</span> &amp;&amp; g[cx - <span class="number">1</span>][cy] == x)   -- cx, ++ cnt;</span><br><span class="line">        <span class="keyword">if</span> (cnt &gt;= k)       <span class="keyword">return</span> tt;</span><br><span class="line"><span class="comment">//         cerr &lt;&lt; &quot; - &quot; &lt;&lt; cnt &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">        cx = h[col], cy = col;</span><br><span class="line">        cnt = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (cy + <span class="number">1</span> &lt;= m &amp;&amp; g[cx][cy + <span class="number">1</span>] == x)   ++ cy, ++ cnt;</span><br><span class="line">        cx = h[col], cy = col; </span><br><span class="line">        <span class="keyword">while</span> (cy - <span class="number">1</span> &gt;= <span class="number">1</span> &amp;&amp; g[cx][cy - <span class="number">1</span>] == x)   -- cy, ++ cnt;</span><br><span class="line">        <span class="keyword">if</span> (cnt &gt;= k)       <span class="keyword">return</span> tt;</span><br><span class="line"><span class="comment">//         cerr &lt;&lt; &quot; | &quot; &lt;&lt; cnt &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">        cx = h[col], cy = col;</span><br><span class="line">        cnt = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (cx + <span class="number">1</span> &lt;= n &amp;&amp; cy + <span class="number">1</span> &lt;= m &amp;&amp; g[cx + <span class="number">1</span>][cy + <span class="number">1</span>] == x)   ++ cx, ++ cy, ++ cnt;</span><br><span class="line">        cx = h[col], cy = col;</span><br><span class="line">        <span class="keyword">while</span> (cx - <span class="number">1</span> &gt;= <span class="number">1</span> &amp;&amp; cy - <span class="number">1</span> &gt;= <span class="number">1</span> &amp;&amp; g[cx - <span class="number">1</span>][cy - <span class="number">1</span>] == x)   -- cx, -- cy, ++ cnt;</span><br><span class="line">        <span class="keyword">if</span> (cnt &gt;= k)       <span class="keyword">return</span> tt;</span><br><span class="line"><span class="comment">//         cerr &lt;&lt; &quot; / &quot; &lt;&lt; cnt &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">        cx = h[col], cy = col;</span><br><span class="line">        cnt = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (cx + <span class="number">1</span> &lt;= n &amp;&amp; cy - <span class="number">1</span> &gt;= <span class="number">1</span> &amp;&amp; g[cx + <span class="number">1</span>][cy - <span class="number">1</span>] == x)   ++ cx, -- cy, ++ cnt;</span><br><span class="line">        cx = h[col], cy = col;</span><br><span class="line">        <span class="keyword">while</span> (cx - <span class="number">1</span> &gt;= <span class="number">1</span> &amp;&amp; cy + <span class="number">1</span> &gt;= <span class="number">1</span> &amp;&amp; g[cx - <span class="number">1</span>][cy + <span class="number">1</span>] == x)   -- cx, ++ cy, ++ cnt;</span><br><span class="line">        <span class="keyword">if</span> (cnt &gt;= k)       <span class="keyword">return</span> tt;</span><br><span class="line"><span class="comment">//         cerr &lt;&lt; &quot; \\ &quot; &lt;&lt; cnt &lt;&lt; endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="E-弹珠碰撞"><a href="#E-弹珠碰撞" class="headerlink" title="E - 弹珠碰撞"></a>E - 弹珠碰撞</h2><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>长度为 n 的线段上，有 m 颗弹珠在匀速以1单位/s 左右滚动。弹珠ball有d, p两个参数. d(0/1)表示左/右方向, p表示初始位置. </p><p>两颗滚动方向相反的弹珠位置重合的时候就会停滞 1 单位时间不滚动，并交换两颗弹珠滚动的方向。一颗弹珠可以反复发生碰撞，如果在停滞中受到碰撞，则停滞时间会累加。</p><p>如果一颗弹珠滚到了位置 0 或位置 n+1，那么这颗弹珠就滚出了线段。问最后一颗弹珠在什么时候滚出线段？</p><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p>a -&gt;  &lt;- b 左右两个弹珠相撞后</p><p>&lt;-a   b -&gt; </p><p>&lt;-b   a -&gt; 其实也能等价于a, b两个球直接穿过彼此. 有一道gym上的题, 学弟LLQ就想出来了这个性质, 挺经典的</p><p>算时间的时候, 只用看珠子在前进到终点的过程中, 迎面而来有多少个珠子, 用前后缀统计下就行.</p><p>​    </p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="keyword">struct</span> &#123;</span><br><span class="line">    <span class="type">int</span> d, p;</span><br><span class="line">&#125; ball[N];</span><br><span class="line"><span class="type">int</span> pre1[N];        <span class="comment">// -&gt;</span></span><br><span class="line"><span class="type">int</span> suf0[N];        <span class="comment">// &lt;-</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)   cin &gt;&gt; ball[i].d;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)   cin &gt;&gt; ball[i].p;</span><br><span class="line">    <span class="built_in">sort</span>(ball + <span class="number">1</span>, ball + <span class="number">1</span> + m, [&amp;](<span class="keyword">auto</span> &amp;a, <span class="keyword">auto</span> &amp;b) &#123;</span><br><span class="line">        <span class="keyword">return</span> a.p &lt; b.p;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)   pre1[i] = pre1[i - <span class="number">1</span>] + (ball[i].d == <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = m; i &gt;= <span class="number">1</span>; -- i)   suf0[i] = suf0[i + <span class="number">1</span>] + (ball[i].d == <span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i) &#123;</span><br><span class="line">        <span class="keyword">auto</span> [d, p] = ball[i];</span><br><span class="line">        <span class="type">int</span> t = (d ? (n + <span class="number">1</span> - p) + suf0[i] : p + pre1[i]);</span><br><span class="line">        <span class="comment">// cerr &lt;&lt; t &lt;&lt; endl;</span></span><br><span class="line">        ans = <span class="built_in">max</span>(t, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    cerr &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="F-困难卷积"><a href="#F-困难卷积" class="headerlink" title="F - 困难卷积"></a>F - 困难卷积</h2><h3 id="题意-2"><a href="#题意-2" class="headerlink" title="题意"></a>题意</h3><p>给定整数序列 a[n], b[n]，求：<br>$$<br>\sum_{i=1}^n\sum_{j=1}^n\Big\lfloor\sqrt{|a_i-b_j|}\Big\rfloor<br>$$</p><p>其中 $\lfloor x\rfloor$表示不超过 x 的最大整数，例如 $\lfloor 3.5\rfloor=3,\lfloor\sqrt 2\rfloor =1$。</p><p>$1≤n≤10^6，0\leq a_i,b_i\leq 3\times 10^6，\sum a_i,\sum b_i\leq 10^7$。</p><h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><p>3e6 排除暴力. 注意到$\sum_{a_i}$才10倍于len(a), 说明有很多数都是重复的. 所以分组计算就行</p><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N], b[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; cnta, cntb;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)   cin &gt;&gt; a[i], cnta[a[i]] ++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)   cin &gt;&gt; b[i], cntb[b[i]] ++;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> [va, ca] : cnta) </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> [vb, cb] : cntb) &#123;</span><br><span class="line">            ans += <span class="built_in">floor</span>(<span class="built_in">sqrt</span>(<span class="built_in">abs</span>(va - vb))) * ca * cb;</span><br><span class="line">        &#125;</span><br><span class="line">    cerr &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;D-国际象棋&quot;&gt;&lt;a href=&quot;#D-国际象棋&quot; class=&quot;headerlink&quot; title=&quot;D - 国际象棋&quot;&gt;&lt;/a&gt;D - 国际象棋&lt;/h2&gt;&lt;h3 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题</summary>
      
    
    
    
    <category term="题解" scheme="http://example.com/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="算法_思维" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95-%E6%80%9D%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2022/10/31/hello-world/"/>
    <id>http://example.com/2022/10/31/hello-world/</id>
    <published>2022-10-31T11:31:34.473Z</published>
    <updated>2022-10-31T11:29:53.845Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Ubuntu 下使用 Clash 代理</title>
    <link href="http://example.com/2022/02/02/Ubuntu%20%E4%B8%8B%E4%BD%BF%E7%94%A8%20Clash%20%E4%BB%A3%E7%90%86/"/>
    <id>http://example.com/2022/02/02/Ubuntu%20%E4%B8%8B%E4%BD%BF%E7%94%A8%20Clash%20%E4%BB%A3%E7%90%86/</id>
    <published>2022-02-01T16:00:00.000Z</published>
    <updated>2022-10-31T16:21:23.581Z</updated>
    
    <content type="html"><![CDATA[<p>Ubuntu科学上网</p><ol><li> 在 <a href="https://link.zhihu.com/?target=https://github.com/Dreamacro/clash/releases">https://github.com/Dreamacro/clash/releases</a> 下载对应的 clash 版本（普通电脑对应的是 linux-amd64 版本），解压，重命名为 clash。</li><li> 添加执行权限（sudo chmod + x clash），将 clash 放到 /usr/bin/ 目录下（sudo cp clash /usr/bin/）。</li><li> 在终端中运行 clash，会在 ~/.config/clash 文件夹下生成 config.yaml 和 Country.mmdb 两个文件。用商家提供的替换这两个文件，重新运行 clash。</li><li>设置系统代理：<br> <img src="/images/2022-02-02-clash-on-Ubuntu_1.png" alt="1"></li></ol><blockquote><ol><li>用 nohup clash &amp; 命令可以使程序在后台运行，即使退出终端也不影响。</li><li>将clash进程加入开机自启动</li></ol></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Ubuntu科学上网&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt; 在 &lt;a href=&quot;https://link.zhihu.com/?target=https://github.com/Dreamacro/clash/releases&quot;&gt;https://github.com/Dreama</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="Network" scheme="http://example.com/tags/Network/"/>
    
  </entry>
  
</feed>
